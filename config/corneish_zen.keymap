/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        BRACKETS {
            bindings = <&mt RIGHT_BRACKET LBKT>;
            key-positions = <9 10>;
            layers = <0>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        M_VSPREV: M_VSPREV {
            compatible = "zmk,behavior-macro";
            label = "M_VSPREV";
            #binding-cells = <0>;
            bindings = <&kp LC(MINUS)>;
        };
        M_VSNEXT: M_VSNEXT {
            compatible = "zmk,behavior-macro";
            label = "M_VSNEXT";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(MINUS))>;
        };
        M_IJPREV: M_IJPREV {
            compatible = "zmk,behavior-macro";
            label = "M_IJPREV";
            #binding-cells = <0>;
            bindings = <&kp LG(LBKT)>;
        };
        M_IJNEXT: M_IJNEXT {
            compatible = "zmk,behavior-macro";
            label = "M_IJNEXT";
            #binding-cells = <0>;
            bindings = <&kp LG(RBKT)>;
        };
        M_ITBRPREV: M_ITBRPREV {
            compatible = "zmk,behavior-macro";
            label = "M_ITBRPREV";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT)>;
        };
        M_ITBRNEXT: M_ITBRNEXT {
            compatible = "zmk,behavior-macro";
            label = "M_ITBRNEXT";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT)>;
        };
        M_SPACESNEXT: M_SPACESNEXT {
            compatible = "zmk,behavior-macro";
            label = "M_SPACESNEXT";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT)>;
        };
        M_SPACESPREV: M_SPACESPREV {
            compatible = "zmk,behavior-macro";
            label = "M_SPACESPREV";
            #binding-cells = <0>;
            bindings = <&kp LC(LEFT)>;
        };
        M_CHROMETABNEXT: M_CHROMETABNEXT {
            compatible = "zmk,behavior-macro";
            label = "M_CHROMETABNEXT";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(RIGHT))>;
        };
        M_CHROMETABPREV: M_CHROMETABPREV {
            compatible = "zmk,behavior-macro";
            label = "M_CHROMETABPREV";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(LEFT))>;
        };
        M_MACSLEEP: M_MACSLEEP {
            compatible = "zmk,behavior-macro";
            label = "M_MACSLEEP";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(C_EJECT))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE_LAYER {
            bindings = <
       &kp TAB  &kp Q  &kp W     &kp E  &kp R     &kp T        &kp Y    &kp U      &kp I    &kp O     &kp P  &mt BACKSLASH MINUS
      &kp BSPC  &kp A  &kp S     &kp D  &kp F     &kp G        &kp H    &kp J      &kp K    &kp L  &kp SEMI              &kp SQT
&mt LSHIFT ESC  &kp Z  &kp X     &kp C  &kp V     &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH            &kp LCTRL
                              &kp RALT  &mo 1  &kp LGUI    &kp SPACE  &kp RET      &mo 2
            >;
        };

        NUM_LAYER {
            bindings = <
&kp GRAVE    &kp N1    &kp N2        &kp N3        &kp N4      &kp N5       &kp N6  &kp N7  &kp N8  &kp N9     &kp N0   &kp BSLH
   &trans  &kp LBKT  &kp RBKT  &kp LS(LBKT)  &kp LS(RBKT)   &kp EQUAL    &kp ASTRK  &kp N4  &kp N5  &kp N6   &kp PLUS  &kp EQUAL
   &trans    &trans    &trans        &trans        &trans  &kp DELETE     &kp FSLH  &kp N1  &kp N2  &kp N3  &kp MINUS    &kp DOT
                                     &trans        &trans      &trans       &trans  &trans  &kp N0
            >;
        };

        NAV_LAYER {
            bindings = <
&kp LG(GRAVE)  &M_SPACESPREV  &M_SPACESNEXT         &M_VSPREV         &M_VSNEXT  &trans          &kp HOME  &kp PAGE_DOWN     &kp PG_UP          &kp END  &trans  &trans
       &trans    &M_ITBRPREV    &M_ITBRNEXT  &M_CHROMETABPREV  &M_CHROMETABNEXT  &trans    &kp LEFT_ARROW       &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
       &trans         &trans         &trans         &M_IJPREV         &M_IJNEXT  &trans            &trans         &trans        &trans           &trans  &trans  &trans
                                                       &trans            &trans  &trans            &trans         &trans        &trans
            >;
        };

        ADJUST_LAYER {
            bindings = <
&trans   &kp F1   &kp F2  &kp F3  &kp F4   &kp F5        &trans  &kp C_VOL_DN    &kp C_MUTE  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP
&trans   &kp F6   &kp F7  &kp F8  &kp F9  &kp F10        &trans      &kp C_RW      &kp C_PP      &kp C_FF        &trans   &M_MACSLEEP
&trans  &kp F11  &kp F12  &trans  &trans   &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                          &trans  &trans   &trans        &trans        &trans        &trans
            >;
        };
    };
};
